/*
 * Croct Export
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: apis@croct.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.croct.client.export.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.croct.client.export.model.ProductDetails;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.croct.client.export.JSON;


/**
 * An item of an order.
 */
@ApiModel(description = "An item of an order.")
@JsonPropertyOrder({
  OrderItem.JSON_PROPERTY_INDEX,
  OrderItem.JSON_PROPERTY_PRODUCT,
  OrderItem.JSON_PROPERTY_QUANTITY,
  OrderItem.JSON_PROPERTY_TOTAL,
  OrderItem.JSON_PROPERTY_DISCOUNT,
  OrderItem.JSON_PROPERTY_COUPON
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class OrderItem {
  public static final String JSON_PROPERTY_INDEX = "index";
  private Integer index;

  public static final String JSON_PROPERTY_PRODUCT = "product";
  private ProductDetails product;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private Integer quantity;

  public static final String JSON_PROPERTY_TOTAL = "total";
  private Double total;

  public static final String JSON_PROPERTY_DISCOUNT = "discount";
  private Double discount;

  public static final String JSON_PROPERTY_COUPON = "coupon";
  private String coupon;


  public OrderItem index(Integer index) {
    this.index = index;
    return this;
  }

   /**
   * The index, starting from zero, representing the order in which the item was added to the shopping cart.
   * @return index
  **/
  @ApiModelProperty(required = true, value = "The index, starting from zero, representing the order in which the item was added to the shopping cart.")
  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getIndex() {
    return index;
  }


  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIndex(Integer index) {
    this.index = index;
  }


  public OrderItem product(ProductDetails product) {
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ProductDetails getProduct() {
    return product;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProduct(ProductDetails product) {
    this.product = product;
  }


  public OrderItem quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * The number of units of the item ordered.
   * @return quantity
  **/
  @ApiModelProperty(required = true, value = "The number of units of the item ordered.")
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public OrderItem total(Double total) {
    this.total = total;
    return this;
  }

   /**
   * The total for the item. It includes discounts and any other adjustment.
   * @return total
  **/
  @ApiModelProperty(required = true, value = "The total for the item. It includes discounts and any other adjustment.")
  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getTotal() {
    return total;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotal(Double total) {
    this.total = total;
  }


  public OrderItem discount(Double discount) {
    this.discount = discount;
    return this;
  }

   /**
   * The amount of the discount applied to the item.
   * @return discount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The amount of the discount applied to the item.")
  @JsonProperty(JSON_PROPERTY_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getDiscount() {
    return discount;
  }


  @JsonProperty(JSON_PROPERTY_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDiscount(Double discount) {
    this.discount = discount;
  }


  public OrderItem coupon(String coupon) {
    this.coupon = coupon;
    return this;
  }

   /**
   * The coupon applied to the item. For example, \&quot;SUPER_DEALS\&quot;.
   * @return coupon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The coupon applied to the item. For example, \"SUPER_DEALS\".")
  @JsonProperty(JSON_PROPERTY_COUPON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCoupon() {
    return coupon;
  }


  @JsonProperty(JSON_PROPERTY_COUPON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCoupon(String coupon) {
    this.coupon = coupon;
  }


  /**
   * Return true if this OrderItem object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderItem orderItem = (OrderItem) o;
    return Objects.equals(this.index, orderItem.index) &&
        Objects.equals(this.product, orderItem.product) &&
        Objects.equals(this.quantity, orderItem.quantity) &&
        Objects.equals(this.total, orderItem.total) &&
        Objects.equals(this.discount, orderItem.discount) &&
        Objects.equals(this.coupon, orderItem.coupon);
  }

  @Override
  public int hashCode() {
    return Objects.hash(index, product, quantity, total, discount, coupon);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderItem {\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    coupon: ").append(toIndentedString(coupon)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

