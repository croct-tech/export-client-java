/*
 * Croct Export
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.3.0
 * Contact: apis@croct.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.croct.client.export.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.croct.client.export.JSON;


/**
 * The aggregated statistics of the session.
 */
@JsonPropertyOrder({
  SessionStatistics.JSON_PROPERTY_PAGE_VIEWS,
  SessionStatistics.JSON_PROPERTY_TAB_VIEWS,
  SessionStatistics.JSON_PROPERTY_ORDERS
})
@JsonTypeName("Session_statistics")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SessionStatistics {
  public static final String JSON_PROPERTY_PAGE_VIEWS = "pageViews";
  private Integer pageViews;

  public static final String JSON_PROPERTY_TAB_VIEWS = "tabViews";
  private Integer tabViews;

  public static final String JSON_PROPERTY_ORDERS = "orders";
  private Integer orders;

  public SessionStatistics() { 
  }

  public SessionStatistics pageViews(Integer pageViews) {
    this.pageViews = pageViews;
    return this;
  }

   /**
   * The total number of page views.
   * @return pageViews
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE_VIEWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPageViews() {
    return pageViews;
  }


  @JsonProperty(JSON_PROPERTY_PAGE_VIEWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageViews(Integer pageViews) {
    this.pageViews = pageViews;
  }


  public SessionStatistics tabViews(Integer tabViews) {
    this.tabViews = tabViews;
    return this;
  }

   /**
   * The total number of tab views.
   * @return tabViews
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAB_VIEWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTabViews() {
    return tabViews;
  }


  @JsonProperty(JSON_PROPERTY_TAB_VIEWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTabViews(Integer tabViews) {
    this.tabViews = tabViews;
  }


  public SessionStatistics orders(Integer orders) {
    this.orders = orders;
    return this;
  }

   /**
   * The total number of orders placed.
   * @return orders
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOrders() {
    return orders;
  }


  @JsonProperty(JSON_PROPERTY_ORDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrders(Integer orders) {
    this.orders = orders;
  }


  /**
   * Return true if this Session_statistics object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SessionStatistics sessionStatistics = (SessionStatistics) o;
    return Objects.equals(this.pageViews, sessionStatistics.pageViews) &&
        Objects.equals(this.tabViews, sessionStatistics.tabViews) &&
        Objects.equals(this.orders, sessionStatistics.orders);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pageViews, tabViews, orders);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SessionStatistics {\n");
    sb.append("    pageViews: ").append(toIndentedString(pageViews)).append("\n");
    sb.append("    tabViews: ").append(toIndentedString(tabViews)).append("\n");
    sb.append("    orders: ").append(toIndentedString(orders)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

