/*
 * Croct Export
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.3.0
 * Contact: apis@croct.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.croct.client.export.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.croct.client.export.model.SlotPersonalizedMetadata;
import com.croct.client.export.model.SlotPersonalizedPersonalization;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.croct.client.export.JSON;


/**
 * An event recording a slot personalization.
 */
@JsonPropertyOrder({
  SlotPersonalized.JSON_PROPERTY_AT_TYPE,
  SlotPersonalized.JSON_PROPERTY_PERSONALIZATION,
  SlotPersonalized.JSON_PROPERTY_METADATA
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SlotPersonalized {
  public static final String JSON_PROPERTY_AT_TYPE = "@type";
  private String atType;

  public static final String JSON_PROPERTY_PERSONALIZATION = "personalization";
  private SlotPersonalizedPersonalization personalization;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private SlotPersonalizedMetadata metadata;

  public SlotPersonalized() { 
  }

  public SlotPersonalized atType(String atType) {
    this.atType = atType;
    return this;
  }

   /**
   * The event type identifier.
   * @return atType
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAtType() {
    return atType;
  }


  @JsonProperty(JSON_PROPERTY_AT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAtType(String atType) {
    this.atType = atType;
  }


  public SlotPersonalized personalization(SlotPersonalizedPersonalization personalization) {
    this.personalization = personalization;
    return this;
  }

   /**
   * Get personalization
   * @return personalization
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PERSONALIZATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SlotPersonalizedPersonalization getPersonalization() {
    return personalization;
  }


  @JsonProperty(JSON_PROPERTY_PERSONALIZATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPersonalization(SlotPersonalizedPersonalization personalization) {
    this.personalization = personalization;
  }


  public SlotPersonalized metadata(SlotPersonalizedMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SlotPersonalizedMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetadata(SlotPersonalizedMetadata metadata) {
    this.metadata = metadata;
  }


  /**
   * Return true if this SlotPersonalized object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SlotPersonalized slotPersonalized = (SlotPersonalized) o;
    return Objects.equals(this.atType, slotPersonalized.atType) &&
        Objects.equals(this.personalization, slotPersonalized.personalization) &&
        Objects.equals(this.metadata, slotPersonalized.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(atType, personalization, metadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SlotPersonalized {\n");
    sb.append("    atType: ").append(toIndentedString(atType)).append("\n");
    sb.append("    personalization: ").append(toIndentedString(personalization)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

