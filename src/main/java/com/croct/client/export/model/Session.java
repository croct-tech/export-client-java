/*
 * Croct Export
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.3.0
 * Contact: apis@croct.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.croct.client.export.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.croct.client.export.model.Campaign;
import com.croct.client.export.model.Location;
import com.croct.client.export.model.SessionStatistics;
import com.croct.client.export.model.SessionWindow;
import com.croct.client.export.model.WebClient;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.croct.client.export.JSON;


/**
 * Session
 */
@JsonPropertyOrder({
  Session.JSON_PROPERTY_SESSION_ID,
  Session.JSON_PROPERTY_USER_ID,
  Session.JSON_PROPERTY_PARENT_ID,
  Session.JSON_PROPERTY_IS_ANONYMOUS,
  Session.JSON_PROPERTY_WINDOW,
  Session.JSON_PROPERTY_CLOSE_TIME,
  Session.JSON_PROPERTY_REFERRER,
  Session.JSON_PROPERTY_LANDING_PAGE_URL,
  Session.JSON_PROPERTY_CAMPAIGN,
  Session.JSON_PROPERTY_LOCATION,
  Session.JSON_PROPERTY_CLIENT,
  Session.JSON_PROPERTY_ATTRIBUTES,
  Session.JSON_PROPERTY_STATISTICS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0-SNAPSHOT")
public class Session {
  public static final String JSON_PROPERTY_SESSION_ID = "sessionId";
  private UUID sessionId;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  private UUID userId;

  public static final String JSON_PROPERTY_PARENT_ID = "parentId";
  private JsonNullable<UUID> parentId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_IS_ANONYMOUS = "isAnonymous";
  private Boolean isAnonymous;

  public static final String JSON_PROPERTY_WINDOW = "window";
  private SessionWindow window;

  public static final String JSON_PROPERTY_CLOSE_TIME = "closeTime";
  private Long closeTime;

  public static final String JSON_PROPERTY_REFERRER = "referrer";
  private JsonNullable<String> referrer = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LANDING_PAGE_URL = "landingPageUrl";
  private JsonNullable<String> landingPageUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CAMPAIGN = "campaign";
  private Campaign campaign;

  public static final String JSON_PROPERTY_LOCATION = "location";
  private Location location;

  public static final String JSON_PROPERTY_CLIENT = "client";
  private WebClient client;

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private Map<String, Object> attributes = new HashMap<>();

  public static final String JSON_PROPERTY_STATISTICS = "statistics";
  private SessionStatistics statistics;

  public Session() { 
  }

  public Session sessionId(UUID sessionId) {
    this.sessionId = sessionId;
    return this;
  }

   /**
   * The ID that uniquely identifies the session across the application.
   * @return sessionId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getSessionId() {
    return sessionId;
  }


  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSessionId(UUID sessionId) {
    this.sessionId = sessionId;
  }


  public Session userId(UUID userId) {
    this.userId = userId;
    return this;
  }

   /**
   * The ID that uniquely identifies the user across the workspace.
   * @return userId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(UUID userId) {
    this.userId = userId;
  }


  public Session parentId(UUID parentId) {
    this.parentId = JsonNullable.<UUID>of(parentId);
    return this;
  }

   /**
   * The ID of the session that superseded this session. Usually, a session receives a parent ID when a user is identified, causing the current anonymous session to end and a new identified session to begin. In this case, the ID of the new session is assigned as the parent ID of the anonymous session.
   * @return parentId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public UUID getParentId() {
        return parentId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getParentId_JsonNullable() {
    return parentId;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  public void setParentId_JsonNullable(JsonNullable<UUID> parentId) {
    this.parentId = parentId;
  }

  public void setParentId(UUID parentId) {
    this.parentId = JsonNullable.<UUID>of(parentId);
  }


  public Session isAnonymous(Boolean isAnonymous) {
    this.isAnonymous = isAnonymous;
    return this;
  }

   /**
   * The flag that indicates whether the user is anonymous.
   * @return isAnonymous
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_ANONYMOUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsAnonymous() {
    return isAnonymous;
  }


  @JsonProperty(JSON_PROPERTY_IS_ANONYMOUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsAnonymous(Boolean isAnonymous) {
    this.isAnonymous = isAnonymous;
  }


  public Session window(SessionWindow window) {
    this.window = window;
    return this;
  }

   /**
   * Get window
   * @return window
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WINDOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SessionWindow getWindow() {
    return window;
  }


  @JsonProperty(JSON_PROPERTY_WINDOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWindow(SessionWindow window) {
    this.window = window;
  }


  public Session closeTime(Long closeTime) {
    this.closeTime = closeTime;
    return this;
  }

   /**
   * The time from which the session is closed for new events, but still may accept late-arriving events. The close time may be extended if new events arrive before the session is closed.
   * @return closeTime
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLOSE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCloseTime() {
    return closeTime;
  }


  @JsonProperty(JSON_PROPERTY_CLOSE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCloseTime(Long closeTime) {
    this.closeTime = closeTime;
  }


  public Session referrer(String referrer) {
    this.referrer = JsonNullable.<String>of(referrer);
    return this;
  }

   /**
   * The URI of the content that linked to the page that started the session.
   * @return referrer
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getReferrer() {
        return referrer.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REFERRER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getReferrer_JsonNullable() {
    return referrer;
  }
  
  @JsonProperty(JSON_PROPERTY_REFERRER)
  public void setReferrer_JsonNullable(JsonNullable<String> referrer) {
    this.referrer = referrer;
  }

  public void setReferrer(String referrer) {
    this.referrer = JsonNullable.<String>of(referrer);
  }


  public Session landingPageUrl(String landingPageUrl) {
    this.landingPageUrl = JsonNullable.<String>of(landingPageUrl);
    return this;
  }

   /**
   * The page that started the session.
   * @return landingPageUrl
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getLandingPageUrl() {
        return landingPageUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LANDING_PAGE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLandingPageUrl_JsonNullable() {
    return landingPageUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_LANDING_PAGE_URL)
  public void setLandingPageUrl_JsonNullable(JsonNullable<String> landingPageUrl) {
    this.landingPageUrl = landingPageUrl;
  }

  public void setLandingPageUrl(String landingPageUrl) {
    this.landingPageUrl = JsonNullable.<String>of(landingPageUrl);
  }


  public Session campaign(Campaign campaign) {
    this.campaign = campaign;
    return this;
  }

   /**
   * Get campaign
   * @return campaign
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CAMPAIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Campaign getCampaign() {
    return campaign;
  }


  @JsonProperty(JSON_PROPERTY_CAMPAIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCampaign(Campaign campaign) {
    this.campaign = campaign;
  }


  public Session location(Location location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Location getLocation() {
    return location;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocation(Location location) {
    this.location = location;
  }


  public Session client(WebClient client) {
    this.client = client;
    return this;
  }

   /**
   * Get client
   * @return client
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WebClient getClient() {
    return client;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClient(WebClient client) {
    this.client = client;
  }


  public Session attributes(Map<String, Object> attributes) {
    this.attributes = attributes;
    return this;
  }

  public Session putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * The custom attributes.
   * @return attributes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public Session statistics(SessionStatistics statistics) {
    this.statistics = statistics;
    return this;
  }

   /**
   * Get statistics
   * @return statistics
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATISTICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SessionStatistics getStatistics() {
    return statistics;
  }


  @JsonProperty(JSON_PROPERTY_STATISTICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatistics(SessionStatistics statistics) {
    this.statistics = statistics;
  }


  /**
   * Return true if this Session object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Session session = (Session) o;
    return Objects.equals(this.sessionId, session.sessionId) &&
        Objects.equals(this.userId, session.userId) &&
        equalsNullable(this.parentId, session.parentId) &&
        Objects.equals(this.isAnonymous, session.isAnonymous) &&
        Objects.equals(this.window, session.window) &&
        Objects.equals(this.closeTime, session.closeTime) &&
        equalsNullable(this.referrer, session.referrer) &&
        equalsNullable(this.landingPageUrl, session.landingPageUrl) &&
        Objects.equals(this.campaign, session.campaign) &&
        Objects.equals(this.location, session.location) &&
        Objects.equals(this.client, session.client) &&
        Objects.equals(this.attributes, session.attributes) &&
        Objects.equals(this.statistics, session.statistics);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(sessionId, userId, hashCodeNullable(parentId), isAnonymous, window, closeTime, hashCodeNullable(referrer), hashCodeNullable(landingPageUrl), campaign, location, client, attributes, statistics);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Session {\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    isAnonymous: ").append(toIndentedString(isAnonymous)).append("\n");
    sb.append("    window: ").append(toIndentedString(window)).append("\n");
    sb.append("    closeTime: ").append(toIndentedString(closeTime)).append("\n");
    sb.append("    referrer: ").append(toIndentedString(referrer)).append("\n");
    sb.append("    landingPageUrl: ").append(toIndentedString(landingPageUrl)).append("\n");
    sb.append("    campaign: ").append(toIndentedString(campaign)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    client: ").append(toIndentedString(client)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    statistics: ").append(toIndentedString(statistics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

